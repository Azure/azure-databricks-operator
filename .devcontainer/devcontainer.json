// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.177.0/containers/go
{
	"name": "Databricks Operator Go",
	"build": {
		"dockerfile": "Dockerfile",
		"args": {
			// Update the VARIANT arg to pick a version of Go: 1, 1.16, 1.15
			"VARIANT": "1.15",
			// Options
			"INSTALL_NODE": "true",
			"NODE_VERSION": "lts/*"
		}
	},
	"runArgs": [ 
		"--env-file", "${localWorkspaceFolder}/.devcontainer/.env",
		"--cap-add=SYS_PTRACE", 
		"--security-opt", 
		"seccomp=unconfined", 
		"--network=host" 
	],

	// Set *default* container specific settings.json values on container create.
	"settings": {
		"terminal.integrated.shell.linux": "/bin/zsh",
		"go.gopath": "/go",
		"go.useLanguageServer": true,		
		"go.toolsManagement.checkForUpdates": "local",
		"go.goroot": "/usr/local/go",
		"go.lintTool":"golangci-lint",
		"go.lintFlags": [
		"--fast"
		],
		"[go]": {
            "editor.formatOnSave": true,
            "editor.codeActionsOnSave": {
                "source.organizeImports": true,
            },
            // Optional: Disable snippets, as they conflict with completion ranking.
            "editor.snippetSuggestions": "none",
        },
        "[go.mod]": {
            "editor.formatOnSave": true,
            "editor.codeActionsOnSave": {
                "source.organizeImports": true,
            },
        },
        "gopls": {
            // Add parameter placeholders when completing a function.
            "usePlaceholders": true,

            // If true, enable additional analyses with staticcheck.
            // Warning: This will significantly increase memory usage.
            "staticcheck": false,
        },
		"yaml.schemas": {
			"kubernetes": "*.yaml"
		},
		"python.pythonPath": "/usr/local/bin/python",
		"python.linting.enabled": true,
		"python.linting.pylintEnabled": true,
		"python.testing.pytestEnabled": true,
		"python.linting.flake8Enabled": true,
		"python.linting.lintOnSave": true,
		"python.testing.promptToConfigure": false,
		"python.testing.unittestEnabled": false,
		"python.testing.nosetestsEnabled": false,
		"python.formatting.provider": "black",
		"python.linting.pylintPath": "/usr/local/bin/pylint",
		"remote.extensionKind": {
			"ms-azuretools.vscode-docker": "workspace"
		}
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"ms-azuretools.vscode-docker",
        "ms-vscode.go",
		"ms-python.python",
		"golang.go",
        "humao.rest-client",
        "IBM.output-colorizer",
        "davidanson.vscode-markdownlint",
		"yzhang.markdown-all-in-one",
		"eamodio.gitlens",
		"adamhartford.vscode-base64"
	],

	"forwardPorts": [8085, 8089, 9090],

	// Use 'postCreateCommand' to run commands after the container is created.
    "postCreateCommand": "go mod download",


    "mounts": [
		"source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind",
		"source=${env:HOME}${env:USERPROFILE}/.azure,target=/root/.azure,type=bind",
		"source=${env:HOME}${env:USERPROFILE}/.ssh,target=/root/.ssh,type=bind,readonly",
		// Mount go mod cache
		"source=dboperator-gomodcache,target=/go/pkg,type=volume",
		// Cache vscode exentsions installs and homedir
		"source=dboperator-vscodecache,target=/root/.vscode-server,type=volume",
		// Keep command history 
		"source=dboperator-bashhistory,target=/root/commandhistory,type=volume",
	],

	// Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	//"remoteUser": "vscode"
}
